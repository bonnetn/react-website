{"ast":null,"code":"var _jsxFileName = \"/Users/n/dev/nicolas-website/src/routes/Search.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String!) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\nconst statusMessage = message => {\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\nconst queryName = \"q\";\nconst useSearchQuery = () => {\n  _s();\n  var _searchParams$get;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = (_searchParams$get = searchParams.get(queryName)) !== null && _searchParams$get !== void 0 ? _searchParams$get : \".*\";\n  const setSearchQuery = query => {\n    const existingParams = Array.from(searchParams.entries());\n    const newParams = new URLSearchParams([...existingParams.filter(_ref => {\n      let [key, _] = _ref;\n      return key !== queryName;\n    }), [queryName, query]]);\n    setSearchParams(newParams);\n  };\n  return [query, setSearchQuery];\n};\n_s(useSearchQuery, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\nfunction Search() {\n  _s2();\n  const [query, setQuery] = useSearchQuery();\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    refetch,\n    networkStatus\n  } = useQuery(LIST_CATS, {\n    variables: {\n      search: query\n    }\n  });\n  useEffect(() => {\n    refetch({\n      search: query\n    });\n  }, [query]);\n  if (loading) return statusMessage(\"Loading...\");\n  if (error) return statusMessage(\"Error: \" + error);\n  if (data === undefined) return statusMessage(\"GraphQL endpoint did not return data.\");\n  const {\n    cats_connection: {\n      edges,\n      pageInfo: {\n        hasNextPage,\n        endCursor\n      }\n    }\n  } = data;\n  const handleMoreResults = async () => {\n    if (hasNextPage) {\n      await fetchMore({\n        variables: {\n          cursor: endCursor\n        }\n      });\n    }\n  };\n  const handleNewInput = async input => {\n    setQuery(input);\n  };\n  const cats = edges.map(edge => edge.node);\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          onInput: handleNewInput,\n          defaultQuery: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CatsList, {\n      cats: cats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoreButton, {\n      hasNext: hasNextPage,\n      handleMoreResults: handleMoreResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s2(Search, \"lI5VQrusJGdLJOEFZMO5OUJI/9Q=\", false, function () {\n  return [useSearchQuery, useQuery];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Template","useQuery","gql","SearchBox","CatsList","MoreButton","useSearchParams","useEffect","LIST_CATS","statusMessage","message","queryName","useSearchQuery","searchParams","setSearchParams","query","get","setSearchQuery","existingParams","Array","from","entries","newParams","URLSearchParams","filter","key","_","Search","setQuery","loading","error","data","fetchMore","refetch","networkStatus","variables","search","undefined","cats_connection","edges","pageInfo","hasNextPage","endCursor","handleMoreResults","cursor","handleNewInput","input","cats","map","edge","node"],"sources":["/Users/n/dev/nicolas-website/src/routes/Search.tsx"],"sourcesContent":["import \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList, { Cat } from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useMemo } from \"react\";\n\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String!) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\n\nconst statusMessage = (message: string) => {\n  return <Template>{message}</Template>;\n};\n\nconst queryName = \"q\";\n\nconst useSearchQuery: () => [string, (query: string) => void] = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(queryName) ?? \".*\";\n\n  const setSearchQuery = (query: string) => {\n    const existingParams = Array.from(searchParams.entries());\n    const newParams = new URLSearchParams([\n      ...existingParams.filter(([key, _]) => key !== queryName),\n      [queryName, query],\n    ]);\n    setSearchParams(newParams);\n  };\n\n  return [query, setSearchQuery];\n};\n\nfunction Search() {\n  const [query, setQuery] = useSearchQuery();\n\n  const { loading, error, data, fetchMore, refetch, networkStatus } = useQuery(\n    LIST_CATS,\n    {\n      variables: {\n        search: query,\n      },\n    }\n  );\n  useEffect(() => {\n    refetch({ search: query });\n  }, [query]);\n\n  if (loading) return statusMessage(\"Loading...\");\n  if (error) return statusMessage(\"Error: \" + error);\n  if (data === undefined)\n    return statusMessage(\"GraphQL endpoint did not return data.\");\n\n  const {\n    cats_connection: {\n      edges,\n      pageInfo: { hasNextPage, endCursor },\n    },\n  } = data;\n\n  const handleMoreResults = async () => {\n    if (hasNextPage) {\n      await fetchMore({\n        variables: { cursor: endCursor },\n      });\n    }\n  };\n\n  const handleNewInput = async (input: string) => {\n    setQuery(input);\n  };\n\n  const cats = edges.map((edge) => edge.node);\n\n  return (\n    <Template>\n      <div className={\"search-container\"}>\n        <div className={\"label\"}>Search:</div>\n        <div className={\"search-box\"}>\n          <SearchBox onInput={handleNewInput} defaultQuery={query} />\n        </div>\n      </div>\n\n      <CatsList cats={cats} />\n      <MoreButton hasNext={hasNextPage} handleMoreResults={handleMoreResults} />\n    </Template>\n  );\n}\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}