{"ast":null,"code":"/* eslint-disable */\n\nconst documents = [];\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n *\n *\n * @example\n * ```ts\n * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);\n * ```\n *\n * The query argument is unknown!\n * Please regenerate the types.\n **/\n\nexport function gql(source) {\n  return {};\n}","map":{"version":3,"names":["documents","gql","source"],"sources":["/Users/n/dev/nicolas-website/src/__generated__/gql.ts"],"sourcesContent":["/* eslint-disable */\nimport * as types from \"./graphql\";\nimport { TypedDocumentNode as DocumentNode } from \"@graphql-typed-document-node/core\";\n\nconst documents = [];\n/**\n * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n *\n *\n * @example\n * ```ts\n * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);\n * ```\n *\n * The query argument is unknown!\n * Please regenerate the types.\n **/\nexport function gql(source: string): unknown;\n\nexport function gql(source: string) {\n  return {};\n}\n\nexport type DocumentType<TDocumentNode extends DocumentNode<any, any>> =\n  TDocumentNode extends DocumentNode<infer TType, any> ? TType : never;\n"],"mappings":"AAAA;;AAIA,MAAMA,SAAS,GAAG,EAAE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,GAAG,CAACC,MAAc,EAAE;EAClC,OAAO,CAAC,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}