{"ast":null,"code":"var _jsxFileName = \"/Users/n/dev/nicolas-website/src/routes/Search.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\nconst defaultSearchQuery = \".*\";\nconst statusMessage = message => {\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\nconst useSearchQuery = () => {\n  _s();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"query\");\n  const setSearchQuery = query => {\n    setSearchParams(new URLSearchParams([...Array.from(searchParams.entries()), [\"query\", query]]));\n  };\n  return [searchQuery, setSearchQuery];\n};\n_s(useSearchQuery, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\nfunction Search() {\n  _s2();\n  var _edges$map;\n  const [q, setQ] = useSearchQuery();\n  console.log(q);\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    refetch\n  } = useQuery(LIST_CATS, {\n    variables: {\n      search: defaultSearchQuery\n    }\n  });\n  if (loading) return statusMessage(\"Loading\");\n  if (error) return statusMessage(\"Error: \" + error);\n\n  // assert(data !== undefined);\n  const connection = data.cats_connection;\n\n  // assert(connection.pageInfo !== undefined);\n  const pageInfo = connection.pageInfo;\n  const hasNext = pageInfo.hasNextPage;\n  const handleMoreResults = async () => {\n    if (!hasNext) {\n      return;\n    }\n    await fetchMore({\n      variables: {\n        cursor: pageInfo.endCursor\n      }\n    });\n  };\n  const handleNewInput = async input => {\n    await refetch({\n      search: input\n    });\n  };\n  const cats = (_edges$map = data.cats_connection.edges.map(edge => edge.node)) !== null && _edges$map !== void 0 ? _edges$map : [];\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          onInput: handleNewInput,\n          defaultQuery: defaultSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CatsList, {\n      cats: cats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoreButton, {\n      hasNext: hasNext,\n      handleMoreResults: handleMoreResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s2(Search, \"jk8fqPOfA/H6Q2QzRPVJwb08PGM=\", false, function () {\n  return [useSearchQuery, useQuery];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Template","useQuery","gql","SearchBox","CatsList","MoreButton","useSearchParams","LIST_CATS","defaultSearchQuery","statusMessage","message","useSearchQuery","searchParams","setSearchParams","searchQuery","get","setSearchQuery","query","URLSearchParams","Array","from","entries","Search","q","setQ","console","log","loading","error","data","fetchMore","refetch","variables","search","connection","cats_connection","pageInfo","hasNext","hasNextPage","handleMoreResults","cursor","endCursor","handleNewInput","input","cats","edges","map","edge","node"],"sources":["/Users/n/dev/nicolas-website/src/routes/Search.tsx"],"sourcesContent":["import \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList, { Cat } from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { useMemo } from \"react\";\n\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\n\nconst defaultSearchQuery = \".*\";\nconst statusMessage = (message: string) => {\n  return <Template>{message}</Template>;\n};\n\nconst useSearchQuery = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"query\");\n\n  const setSearchQuery = (query: string) => {\n    setSearchParams(\n      new URLSearchParams([\n        ...Array.from(searchParams.entries()),\n        [\"query\", query],\n      ])\n    );\n  };\n\n  return [searchQuery, setSearchQuery];\n};\n\nfunction Search() {\n  const [q, setQ] = useSearchQuery();\n  console.log(q);\n\n  const { loading, error, data, fetchMore, refetch } = useQuery(LIST_CATS, {\n    variables: {\n      search: defaultSearchQuery,\n    },\n  });\n  if (loading) return statusMessage(\"Loading\");\n  if (error) return statusMessage(\"Error: \" + error);\n\n  // assert(data !== undefined);\n  const connection = data!.cats_connection;\n\n  // assert(connection.pageInfo !== undefined);\n  const pageInfo = connection.pageInfo!;\n\n  const hasNext = pageInfo.hasNextPage;\n\n  const handleMoreResults = async () => {\n    if (!hasNext) {\n      return;\n    }\n\n    await fetchMore({\n      variables: { cursor: pageInfo.endCursor },\n    });\n  };\n\n  const handleNewInput = async (input: string) => {\n    await refetch({ search: input });\n  };\n\n  const cats = data!.cats_connection!.edges.map((edge) => edge.node) ?? [];\n\n  return (\n    <Template>\n      <div className={\"search-container\"}>\n        <div className={\"label\"}>Search:</div>\n        <div className={\"search-box\"}>\n          <SearchBox\n            onInput={handleNewInput}\n            defaultQuery={defaultSearchQuery}\n          />\n        </div>\n      </div>\n\n      <CatsList cats={cats} />\n      <MoreButton hasNext={hasNext} handleMoreResults={handleMoreResults} />\n    </Template>\n  );\n}\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAO,eAAe;AACtB,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAe,wBAAwB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAsBC,eAAe,QAAQ,kBAAkB;AAAC;AAGhE,MAAMC,SAAS,GAAGL,GAAG,CAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAMM,kBAAkB,GAAG,IAAI;AAC/B,MAAMC,aAAa,GAAIC,OAAe,IAAK;EACzC,oBAAO,QAAC,QAAQ;IAAA,UAAEA;EAAO;IAAA;IAAA;IAAA;EAAA,QAAY;AACvC,CAAC;AAED,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,eAAe,EAAE;EACzD,MAAMQ,WAAW,GAAGF,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;EAE7C,MAAMC,cAAc,GAAIC,KAAa,IAAK;IACxCJ,eAAe,CACb,IAAIK,eAAe,CAAC,CAClB,GAAGC,KAAK,CAACC,IAAI,CAACR,YAAY,CAACS,OAAO,EAAE,CAAC,EACrC,CAAC,OAAO,EAAEJ,KAAK,CAAC,CACjB,CAAC,CACH;EACH,CAAC;EAED,OAAO,CAACH,WAAW,EAAEE,cAAc,CAAC;AACtC,CAAC;AAAC,GAdIL,cAAc;EAAA,QACsBL,eAAe;AAAA;AAezD,SAASgB,MAAM,GAAG;EAAA;EAAA;EAChB,MAAM,CAACC,CAAC,EAAEC,IAAI,CAAC,GAAGb,cAAc,EAAE;EAClCc,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAEd,MAAM;IAAEI,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAG9B,QAAQ,CAACM,SAAS,EAAE;IACvEyB,SAAS,EAAE;MACTC,MAAM,EAAEzB;IACV;EACF,CAAC,CAAC;EACF,IAAImB,OAAO,EAAE,OAAOlB,aAAa,CAAC,SAAS,CAAC;EAC5C,IAAImB,KAAK,EAAE,OAAOnB,aAAa,CAAC,SAAS,GAAGmB,KAAK,CAAC;;EAElD;EACA,MAAMM,UAAU,GAAGL,IAAI,CAAEM,eAAe;;EAExC;EACA,MAAMC,QAAQ,GAAGF,UAAU,CAACE,QAAS;EAErC,MAAMC,OAAO,GAAGD,QAAQ,CAACE,WAAW;EAEpC,MAAMC,iBAAiB,GAAG,YAAY;IACpC,IAAI,CAACF,OAAO,EAAE;MACZ;IACF;IAEA,MAAMP,SAAS,CAAC;MACdE,SAAS,EAAE;QAAEQ,MAAM,EAAEJ,QAAQ,CAACK;MAAU;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,KAAa,IAAK;IAC9C,MAAMZ,OAAO,CAAC;MAAEE,MAAM,EAAEU;IAAM,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,IAAI,iBAAGf,IAAI,CAAEM,eAAe,CAAEU,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,mDAAI,EAAE;EAExE,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAE,kBAAmB;MAAA,wBACjC;QAAK,SAAS,EAAE,OAAQ;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACtC;QAAK,SAAS,EAAE,YAAa;QAAA,uBAC3B,QAAC,SAAS;UACR,OAAO,EAAEN,cAAe;UACxB,YAAY,EAAElC;QAAmB;UAAA;UAAA;UAAA;QAAA;MACjC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAEN,QAAC,QAAQ;MAAC,IAAI,EAAEoC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACxB,QAAC,UAAU;MAAC,OAAO,EAAEP,OAAQ;MAAC,iBAAiB,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7D;AAEf;AAAC,IApDQjB,MAAM;EAAA,QACKX,cAAc,EAGqBV,QAAQ;AAAA;AAAA,KAJtDqB,MAAM;AAsDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}