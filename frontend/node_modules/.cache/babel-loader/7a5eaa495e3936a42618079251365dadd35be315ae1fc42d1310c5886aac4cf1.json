{"ast":null,"code":"var _jsxFileName = \"/Users/n/dev/nicolas-website/src/routes/Search.tsx\",\n  _s = $RefreshSig$();\nimport \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport assert from \"assert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\nconst defaultSearchQuery = \".*\";\nconst statusMessage = message => {\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\nfunction Search() {\n  _s();\n  var _edges$map;\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    refetch\n  } = useQuery(LIST_CATS, {\n    variables: {\n      search: defaultSearchQuery\n    }\n  });\n  if (loading) return statusMessage(\"Loading\");\n  if (error) return statusMessage(\"Error: \" + error);\n  assert(data !== undefined);\n  const connection = data.cats_connection;\n  assert(connection.pageInfo !== undefined);\n  const pageInfo = connection.pageInfo;\n  const hasNext = pageInfo.hasNextPage;\n  const handleMoreResults = async () => {\n    if (!hasNext) {\n      return;\n    }\n    await fetchMore({\n      variables: {\n        cursor: pageInfo.endCursor\n      }\n    });\n  };\n  const handleNewInput = async input => {\n    await refetch({\n      search: input\n    });\n  };\n  const cats = (_edges$map = data.cats_connection.edges.map(edge => edge.node)) !== null && _edges$map !== void 0 ? _edges$map : [];\n  return /*#__PURE__*/_jsxDEV(Template, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          onInput: handleNewInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CatsList, {\n      cats: cats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoreButton, {\n      hasNext: hasNext,\n      handleMoreResults: handleMoreResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"PxuOrhjA2M8WXogIktdDEZR2pJY=\", false, function () {\n  return [useQuery];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Template","useQuery","gql","SearchBox","CatsList","MoreButton","assert","LIST_CATS","defaultSearchQuery","statusMessage","message","Search","loading","error","data","fetchMore","refetch","variables","search","undefined","connection","cats_connection","pageInfo","hasNext","hasNextPage","handleMoreResults","cursor","endCursor","handleNewInput","input","cats","edges","map","edge","node"],"sources":["/Users/n/dev/nicolas-website/src/routes/Search.tsx"],"sourcesContent":["import \"./Search.scss\";\nimport Template from \"../components/Template\";\nimport { useQuery } from \"@apollo/client\";\nimport { gql } from \"../__generated__\";\nimport SearchBox from \"../components/SearchBox\";\nimport CatsList, { Cat } from \"../components/CatsList\";\nimport MoreButton from \"../components/MoreButton\";\nimport assert from \"assert\";\n\nconst LIST_CATS = gql(`\n  query ListCats($cursor: String, $search: String) {\n    cats_connection(first: 5, after: $cursor, where: {name: {_iregex: $search}}, order_by: {id: asc}) {\n      edges {\n        node {\n          id\n          name\n          owner {\n            name\n          }\n        }\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n`);\n\nconst defaultSearchQuery = \".*\";\nconst statusMessage = (message: string) => {\n  return <Template>{message}</Template>;\n};\n\nfunction Search() {\n  const { loading, error, data, fetchMore, refetch } = useQuery(LIST_CATS, {\n    variables: {\n      search: defaultSearchQuery,\n    },\n  });\n  if (loading) return statusMessage(\"Loading\");\n  if (error) return statusMessage(\"Error: \" + error);\n\n  assert(data !== undefined);\n  const connection = data!.cats_connection;\n\n  assert(connection.pageInfo !== undefined);\n  const pageInfo = connection.pageInfo!;\n\n  const hasNext = pageInfo.hasNextPage;\n\n  const handleMoreResults = async () => {\n    if (!hasNext) {\n      return;\n    }\n\n    await fetchMore({\n      variables: { cursor: pageInfo.endCursor },\n    });\n  };\n\n  const handleNewInput = async (input: string) => {\n    await refetch({ search: input });\n  };\n\n  const cats = data!.cats_connection!.edges.map((edge) => edge.node) ?? [];\n\n  return (\n    <Template>\n      <div className={\"search-container\"}>\n        <div className={\"label\"}>Search:</div>\n        <div className={\"search-box\"}>\n          <SearchBox onInput={handleNewInput} />\n        </div>\n      </div>\n\n      <CatsList cats={cats} />\n      <MoreButton hasNext={hasNext} handleMoreResults={handleMoreResults} />\n    </Template>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAe,wBAAwB;AACtD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAE5B,MAAMC,SAAS,GAAGL,GAAG,CAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AAEF,MAAMM,kBAAkB,GAAG,IAAI;AAC/B,MAAMC,aAAa,GAAIC,OAAe,IAAK;EACzC,oBAAO,QAAC,QAAQ;IAAA,UAAEA;EAAO;IAAA;IAAA;IAAA;EAAA,QAAY;AACvC,CAAC;AAED,SAASC,MAAM,GAAG;EAAA;EAAA;EAChB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGf,QAAQ,CAACM,SAAS,EAAE;IACvEU,SAAS,EAAE;MACTC,MAAM,EAAEV;IACV;EACF,CAAC,CAAC;EACF,IAAII,OAAO,EAAE,OAAOH,aAAa,CAAC,SAAS,CAAC;EAC5C,IAAII,KAAK,EAAE,OAAOJ,aAAa,CAAC,SAAS,GAAGI,KAAK,CAAC;EAElDP,MAAM,CAACQ,IAAI,KAAKK,SAAS,CAAC;EAC1B,MAAMC,UAAU,GAAGN,IAAI,CAAEO,eAAe;EAExCf,MAAM,CAACc,UAAU,CAACE,QAAQ,KAAKH,SAAS,CAAC;EACzC,MAAMG,QAAQ,GAAGF,UAAU,CAACE,QAAS;EAErC,MAAMC,OAAO,GAAGD,QAAQ,CAACE,WAAW;EAEpC,MAAMC,iBAAiB,GAAG,YAAY;IACpC,IAAI,CAACF,OAAO,EAAE;MACZ;IACF;IAEA,MAAMR,SAAS,CAAC;MACdE,SAAS,EAAE;QAAES,MAAM,EAAEJ,QAAQ,CAACK;MAAU;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOC,KAAa,IAAK;IAC9C,MAAMb,OAAO,CAAC;MAAEE,MAAM,EAAEW;IAAM,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,IAAI,iBAAGhB,IAAI,CAAEO,eAAe,CAAEU,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,mDAAI,EAAE;EAExE,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAE,kBAAmB;MAAA,wBACjC;QAAK,SAAS,EAAE,OAAQ;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACtC;QAAK,SAAS,EAAE,YAAa;QAAA,uBAC3B,QAAC,SAAS;UAAC,OAAO,EAAEN;QAAe;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAClC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAEN,QAAC,QAAQ;MAAC,IAAI,EAAEE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACxB,QAAC,UAAU;MAAC,OAAO,EAAEP,OAAQ;MAAC,iBAAiB,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7D;AAEf;AAAC,GA9CQd,MAAM;EAAA,QACwCV,QAAQ;AAAA;AAAA,KADtDU,MAAM;AAgDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}